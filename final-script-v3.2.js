// -----------------------------------------------------------
// Patient Registration Form – Homework 3 (JS Validation)
// Author: Sara Saleem  |  Course: MIS 3371
// Version: 3.2 – spec‑aligned rules (ZIP 5‑digit, UserID & Password constraints)
// -----------------------------------------------------------

// Helper $
function $(id){return document.getElementById(id);}function makeErrorSpan(e){const s=document.createElement("span");return s.className="error",s.textContent="",e.parentNode.appendChild(s),s}function setError(e,s){e.textContent=s}function clearError(e){e.textContent=""}
const rules={firstname:{test:v=>/^[A-Za-z'\-]{1,30}$/.test(v),msg:"1–30 letters, apostrophes, or dashes"},midinitial:{optional:!0,test:v=>/^[A-Za-z]?$/.test(v),msg:"Single letter only"},lastname:{test:v=>/^[A-Za-z0-9'\-]{1,30}$/.test(v),msg:"1–30 letters, numbers, apostrophes, or dashes"},dob:{test:v=>{if(!v)return!1;const e=new Date(v);return e<new Date()},msg:"Choose a valid birth date"},ssn:{optional:!0,test:v=>/^\d{3}-\d{2}-\d{4}$/.test(v),msg:"Format XXX‑XX‑XXXX"},email:{test:v=>/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(v),transform:v=>v.toLowerCase(),msg:"Use name@domain.tld"},phone:{optional:!0,test:v=>/^\d{3}-\d{3}-\d{4}$/.test(v),msg:"Format 000‑000‑0000"},address1:{test:v=>v.trim().length>0,msg:"Address Line 1 is required"},address2:{optional:!0,test:()=>!0},city:{test:v=>/^[A-Za-z'\-\s]{1,30}$/.test(v),msg:"Letters & spaces only (max 30)"},state:{test:v=>""!==v,msg:"Please pick a state"},zip:{test:v=>/^\d{5}$/.test(v),msg:"Exactly 5 digits"},userid:{test:v=>/^[A-Za-z][A-Za-z0-9_-]{4,19}$/.test(v),msg:"5‑20 chars, start with a letter, dash/underscore allowed"},password:{test:v=>/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,30}$/.test(v),msg:"≥8 chars, upper, lower & digit"},confirmPassword:{test:()=>!0,msg:"Passwords must match"}};

window.addEventListener("DOMContentLoaded",()=>{const e=$("userInfo"),t=$("submitBtn"),n=$("reviewBtn"),o={};Object.keys(rules).forEach(i=>{const d=$(i);if(!d)return;const r=makeErrorSpan(d);o[i]={el:d,span:r,...rules[i]},["input","blur"].forEach(e=>{d.addEventListener(e,()=>{l(i),s()})})}),[$("password"),$("confirmPassword")].forEach(e=>{e&&e.addEventListener("input",()=>{l("confirmPassword"),s()})});function l(e){const l=o[e];let a=l.el.value.trim();l.transform&&(a=l.transform(a)),l.el.value=a;if(!l.optional&&""===a)return c(l,"This field is required"),!1;if(l.optional&&""===a)return u(l),!0;let r=l.test(a);if("password"===e&&r){const t=$("userid").value||"";a===t&&(r=!1,l.msg="Password cannot equal User ID")}r?m(l):c(l,l.msg);if("confirmPassword"===e){const t=a===$("password").value;if(!t)return c(l,rules.confirmPassword.msg),!1}return r}function c(e,s){e.el.classList.add("invalid"),e.el.classList.remove("valid"),setError(e.span,s)}function m(e){e.el.classList.add("valid"),e.el.classList.remove("invalid"),clearError(e.span)}function u(e){e.el.classList.remove("invalid","valid"),clearError(e.span)}function s(){t.disabled=!Object.keys(o).every(l)}e.addEventListener("submit",e=>{Object.keys(o).every(l)||e.preventDefault()}),n&&n.addEventListener("click",()=>{Object.keys(o).every(l)&&(window.reviewForm&&window.reviewForm())})});